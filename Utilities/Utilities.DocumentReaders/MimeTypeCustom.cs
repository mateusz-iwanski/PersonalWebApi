namespace PersonalWebApi.Utilities.Utilities.DocumentReaders
{
    public enum MimeTypeCustom
    {
        PlainText,
        MarkDown,
        MarkDownOld1,
        MarkDownOld2,
        Html,
        XHTML,
        XML,
        XML2,
        JSONLD,
        CascadingStyleSheet,
        JavaScript,
        BourneShellScript,
        ImageBmp,
        ImageGif,
        ImageJpeg,
        ImagePng,
        ImageTiff,
        ImageWebP,
        ImageSVG,
        WebPageUrl,
        TextEmbeddingVector,
        Json,
        CSVData,
        Pdf,
        RTFDocument,
        MsWord,
        MsWordX,
        MsPowerPoint,
        MsPowerPointX,
        MsExcel,
        MsExcelX,
        OpenDocumentText,
        OpenDocumentSpreadsheet,
        OpenDocumentPresentation,
        ElectronicPublicationZip,
        AudioAAC,
        AudioMP3,
        AudioWaveform,
        AudioOGG,
        AudioOpus,
        AudioWEBM,
        VideoMP4,
        VideoMPEG,
        VideoOGG,
        VideoOGGGeneric,
        VideoWEBM,
        ArchiveTar,
        ArchiveGzip,
        ArchiveZip,
        ArchiveRar,
        Archive7Zip
    }

    public static class MimeTypeCustomExtensions
    {
        public static string GetMimeType(this MimeTypeCustom mimeType)
        {
            return mimeType switch
            {
                MimeTypeCustom.PlainText => "text/plain",
                MimeTypeCustom.MarkDown => "text/markdown",
                MimeTypeCustom.MarkDownOld1 => "text/x-markdown",
                MimeTypeCustom.MarkDownOld2 => "text/plain-markdown",
                MimeTypeCustom.Html => "text/html",
                MimeTypeCustom.XHTML => "application/xhtml+xml",
                MimeTypeCustom.XML => "application/xml",
                MimeTypeCustom.XML2 => "text/xml",
                MimeTypeCustom.JSONLD => "application/ld+json",
                MimeTypeCustom.CascadingStyleSheet => "text/css",
                MimeTypeCustom.JavaScript => "text/javascript",
                MimeTypeCustom.BourneShellScript => "application/x-sh",
                MimeTypeCustom.ImageBmp => "image/bmp",
                MimeTypeCustom.ImageGif => "image/gif",
                MimeTypeCustom.ImageJpeg => "image/jpeg",
                MimeTypeCustom.ImagePng => "image/png",
                MimeTypeCustom.ImageTiff => "image/tiff",
                MimeTypeCustom.ImageWebP => "image/webp",
                MimeTypeCustom.ImageSVG => "image/svg+xml",
                MimeTypeCustom.WebPageUrl => "text/x-uri",
                MimeTypeCustom.TextEmbeddingVector => "float[]",
                MimeTypeCustom.Json => "application/json",
                MimeTypeCustom.CSVData => "text/csv",
                MimeTypeCustom.Pdf => "application/pdf",
                MimeTypeCustom.RTFDocument => "application/rtf",
                MimeTypeCustom.MsWord => "application/msword",
                MimeTypeCustom.MsWordX => "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                MimeTypeCustom.MsPowerPoint => "application/vnd.ms-powerpoint",
                MimeTypeCustom.MsPowerPointX => "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                MimeTypeCustom.MsExcel => "application/vnd.ms-excel",
                MimeTypeCustom.MsExcelX => "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                MimeTypeCustom.OpenDocumentText => "application/vnd.oasis.opendocument.text",
                MimeTypeCustom.OpenDocumentSpreadsheet => "application/vnd.oasis.opendocument.spreadsheet",
                MimeTypeCustom.OpenDocumentPresentation => "application/vnd.oasis.opendocument.presentation",
                MimeTypeCustom.ElectronicPublicationZip => "application/epub+zip",
                MimeTypeCustom.AudioAAC => "audio/aac",
                MimeTypeCustom.AudioMP3 => "audio/mpeg",
                MimeTypeCustom.AudioWaveform => "audio/wav",
                MimeTypeCustom.AudioOGG => "audio/ogg",
                MimeTypeCustom.AudioOpus => "audio/opus",
                MimeTypeCustom.AudioWEBM => "audio/webm",
                MimeTypeCustom.VideoMP4 => "video/mp4",
                MimeTypeCustom.VideoMPEG => "video/mpeg",
                MimeTypeCustom.VideoOGG => "video/ogg",
                MimeTypeCustom.VideoOGGGeneric => "application/ogg",
                MimeTypeCustom.VideoWEBM => "video/webm",
                MimeTypeCustom.ArchiveTar => "application/x-tar",
                MimeTypeCustom.ArchiveGzip => "application/gzip",
                MimeTypeCustom.ArchiveZip => "application/zip",
                MimeTypeCustom.ArchiveRar => "application/vnd.rar",
                MimeTypeCustom.Archive7Zip => "application/x-7z-compressed",
                _ => throw new ArgumentOutOfRangeException(nameof(mimeType), mimeType, null)
            };
        }
    }
}
